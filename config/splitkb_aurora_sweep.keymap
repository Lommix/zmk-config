/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp ESC>;
        };
    };

    macros {
        small_arrow: small_arrow {
            compatible = "zmk,behavior-macro";
            label = "SMALL_ARROW";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
        };
        thick_arrow: thick_arrow {
            compatible = "zmk,behavior-macro";
            label = "THICK_ARROW";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
        };
        vim_save: vim_save {
            compatible = "zmk,behavior-macro";
            label = "VIM_SAVE";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp W>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                    &kp Q  &kp W  &kp E      &kp R           &kp T             &kp Y          &kp U  &kp I         &kp O                    &kp P
         &mt LEFT_SHIFT A  &kp S  &kp D      &kp F  &mt LEFT_GUI G    &mt LEFT_GUI H          &kp J  &kp K         &kp L  &mt LEFT_SHIFT KP_MINUS
&mt LEFT_CONTROL KP_EQUAL  &kp Z  &kp X      &kp C           &kp V             &kp B          &kp N  &kp M  &kp KP_COMMA  &mt LEFT_CONTROL KP_DOT
                                         &lt 1 TAB     &lt 2 SPACE    &lt 3 KP_ENTER  &kp BACKSPACE
            >;
        };

        left_layer {
            bindings = <
&kp NUM_1  &kp NUM_2        &kp NUM_3        &kp NUM_4   &kp NUM_5    &kp NUM_6  &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp NUM_0
  &kp TAB  &kp LC(S)          &kp DQT        &kp PIPE2    &kp HASH    &kp MINUS    &kp EQL   &kp LBKT   &kp RBKT    &kp DEL
  &kp ESC  &kp TILDE  &kp NON_US_BSLH  &kp NON_US_HASH  &kp TILDE2    &kp MINUS  &kp GRAVE   &kp LBKT   &kp RBKT    &kp DEL
                                                 &mo 1    &kp LGUI     &kp RGUI      &mo 2
            >;
        };

        right_layer {
            bindings = <
&kp BANG   &kp ATSN  &kp HASH  &kp DLLR  &kp PRCT     &kp CRRT      &kp AMPS  &kp KMLT  &kp LPRN   &kp RPRN
&kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN    &kp MINUS  &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp BKSP
&kp LSFT   &kp KPLS  &kp LBKT  &kp RBKT  &kp BSLH    &kp UNDER      &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT
                                  &mo 3  &kp LCTL      &kp SPC         &mo 2
            >;
        };

        tri_layer {
            bindings = <
 &kp NUM_1   &kp NUM_2   &kp NUM_3  &kp NUM_4  &kp NUM_5    &trans     &trans        &trans      &trans  &trans
    &kp F1      &kp F2      &kp F3     &kp F4     &kp F5    &trans  &kp PG_UP  &kp K_VOL_UP  &kp K_MUTE  &trans
&bt BT_CLR  &bt BT_NXT  &bt BT_PRV     &kp F6     &kp F7    &trans  &kp PG_DN  &kp K_VOL_DN      &trans  &trans
                                       &trans     &trans    &trans     &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
